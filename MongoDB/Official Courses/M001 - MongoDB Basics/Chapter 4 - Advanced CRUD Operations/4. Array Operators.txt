Chapter 4: Advanced CRUD Operations

Lecture: Array Operators

$push
    Allows us to add an element to an array
    Turns a field into array field if it was previously a different field

$size
    The $size operator matches any array with the number of elements specified by the argument. For example:

    db.collection.find( { field: { $size: 2 } } );

$all
    The $all operator selects the documents where the value of a field is an array that contains all the specified elements. To specify an $all expression, use the following prototype:

    { <field>: { $all: [ <value1> , <value2> ... ] } }


Projections
    allows us to decide which fields we want to be part of result

Lab 1: Array Operators
Problem:

What is the name of the listing in the sample_airbnb.listingsAndReviews dataset that accommodates more than 6 people and has exactly 50 reviews?

Solution:
db.listingsAndReviews.find({accommodates:{$gt:6}, reviews: {$size: 50}})
Sunset Beach Lodge Retreat

Lab 2: Array Operators
Problem:

Using the sample_airbnb.listingsAndReviews collection find out how many documents have the "property_type" "House", and include "Changing table" as one of the "amenities"?

Enter the number of results to the response field.

db.listingsAndReviews.find({property_type: "House", amenities: "Changing table"}).count()
11

Quiz: Array Operators
Problem:

Which of the following queries will return all listings that have "Free parking on premises", "Air conditioning", and "Wifi" as part of their amenities, and have at least 2 bedrooms in the sample_airbnb.listingsAndReviews collection?