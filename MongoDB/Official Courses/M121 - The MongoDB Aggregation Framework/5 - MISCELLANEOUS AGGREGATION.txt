LESSON 5: MISCELLANEOUS AGGREGATION

    The $redact Stage
        protect information from unauthorized access
        Restricts the contents of the documents based on information stored in the documents themselves.

            { $redact: <expression> }

        The argument can be any valid expression as long as it resolves to the $$DESCEND, $$PRUNE, or $$KEEP system variables.

        $$DESCEND
            $redact returns the fields at the current document level, excluding embedded documents. To include embedded documents and embedded documents within arrays, apply the $cond expression to the embedded documents to determine access for these embedded documents.

        $$PRUNE
            $redact excludes all fields at this current document/embedded document level, without further inspection of any of the excluded fields. This applies even if the excluded field contains embedded documents that may have different access levels.
        
        $$KEEP
            $redact returns or keeps all fields at this current document/embedded document level, without further inspection of the fields at this level. This applies even if the included field contains embedded documents that may have different access levels.

    The $out Stage
        creates new Collection or overwrite from the result
        must be the last Stage
        not to be used with 

    $merge Overview
        Writes the results of the aggregation pipeline to a specified collection. The $merge operator must be the last stage in the pipeline.

        Syntax
            $merge has the following syntax:

            { $merge: {
                into: <collection> -or- { db: <db>, coll: <collection> },
                on: <identifier field> -or- [ <identifier field1>, ...],  // Optional
                let: <variables>,                                         // Optional
                whenMatched: <replace|keepExisting|merge|fail|pipeline>,  // Optional
                whenNotMatched: <insert|discard|fail>                     // Optional
            } }
    $merge Syntax
    Using $merge for Single View
    Using $merge for a Temporary Collection
    Using $merge for Rollups
    Views